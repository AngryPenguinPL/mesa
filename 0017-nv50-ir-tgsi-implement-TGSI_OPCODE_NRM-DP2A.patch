From 36e364f30d2025c4dc0f0ed13ebc585c880b6454 Mon Sep 17 00:00:00 2001
From: Christoph Bumiller <christoph.bumiller@speed.at>
Date: Mon, 20 May 2013 20:15:49 +0200
Subject: [PATCH 17/34] nv50/ir/tgsi: implement TGSI_OPCODE_NRM,DP2A

Used by d3d9 st.
---
 .../drivers/nouveau/codegen/nv50_ir_from_tgsi.cpp    | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

diff --git a/src/gallium/drivers/nouveau/codegen/nv50_ir_from_tgsi.cpp b/src/gallium/drivers/nouveau/codegen/nv50_ir_from_tgsi.cpp
index 1e72b9d..c57cea1 100644
--- a/src/gallium/drivers/nouveau/codegen/nv50_ir_from_tgsi.cpp
+++ b/src/gallium/drivers/nouveau/codegen/nv50_ir_from_tgsi.cpp
@@ -224,7 +224,10 @@ unsigned int Instruction::srcMask(unsigned int s) const
       return (mask & 0x8) | ((mask & 0x7) ? 0x1 : 0x0);
    case TGSI_OPCODE_DP2:
       return 0x3;
+   case TGSI_OPCODE_DP2A:
+      return (s == 2) ? 0x1 : 0x3;
    case TGSI_OPCODE_DP3:
+   case TGSI_OPCODE_NRM:
       return 0x7;
    case TGSI_OPCODE_DP4:
    case TGSI_OPCODE_DPH:
@@ -2437,8 +2440,11 @@ Converter::handleInstruction(const struct tgsi_full_instruction *insn)
       if (dst0[3])
          loadImm(dst0[3], 1.0f);
       break;
+   case TGSI_OPCODE_DP2A:
    case TGSI_OPCODE_DP2:
       val0 = buildDot(2);
+      if (tgsi.getOpcode() == TGSI_OPCODE_DP2A)
+         mkOp2(OP_ADD, TYPE_F32, val0, val0, fetchSrc(2, 0));
       FOR_EACH_DST_ENABLED_CHANNEL(0, c, tgsi)
          mkMov(dst0[c], val0);
       break;
@@ -2459,6 +2465,20 @@ Converter::handleInstruction(const struct tgsi_full_instruction *insn)
       FOR_EACH_DST_ENABLED_CHANNEL(0, c, tgsi)
          mkMov(dst0[c], val0);
       break;
+   case TGSI_OPCODE_NRM:
+      src0 = fetchSrc(0, 0);
+      src1 = fetchSrc(0, 1);
+      src2 = fetchSrc(0, 2);
+      val0 = getScratch();
+      mkOp2(OP_MUL, TYPE_F32, val0, src0, src0);
+      mkOp3(OP_MAD, TYPE_F32, val0, src1, src1, val0);
+      mkOp3(OP_MAD, TYPE_F32, val0, src2, src2, val0);
+      mkOp1(OP_RSQ, TYPE_F32, val0, val0);
+      if (dst0[0]) mkOp2(OP_MUL, TYPE_F32, dst0[0], src0, val0);
+      if (dst0[1]) mkOp2(OP_MUL, TYPE_F32, dst0[1], src1, val0);
+      if (dst0[2]) mkOp2(OP_MUL, TYPE_F32, dst0[2], src2, val0);
+      if (dst0[3]) mkMov(dst0[3], mkImm(1.0f));
+      break;
    case TGSI_OPCODE_DST:
       if (dst0[0])
          loadImm(dst0[0], 1.0f);
-- 
2.1.3

