--- mesa/configure.ac.0901~	2012-09-11 20:53:23.000000000 +0200
+++ mesa/configure.ac	2012-09-12 19:35:15.854498316 +0200
@@ -1420,7 +1420,7 @@ if test "x$enable_vdpau" = xyes; then
 fi
 
 if test "x$enable_va" = xyes; then
-    PKG_CHECK_MODULES([LIBVA], [libva = 0.31.1 x11-xcb xcb-dri2 >= 1.8])
+    PKG_CHECK_MODULES([LIBVA], [libva >= 0.31.1 x11-xcb xcb-dri2 >= 1.8])
     AC_MSG_WARN([vaapi state tracker currently unmaintained])
     GALLIUM_STATE_TRACKERS_DIRS="$GALLIUM_STATE_TRACKERS_DIRS va"
     HAVE_ST_VA="yes"
--- mesa/src/gallium/state_trackers/va/va_context.c.0901~	2012-09-11 20:53:23.000000000 +0200
+++ mesa/src/gallium/state_trackers/va/va_context.c	2012-09-12 19:34:58.245416728 +0200
@@ -38,6 +38,8 @@
 
 #include "va_private.h"
 
+static struct VADriverVTable vTable;
+
 PUBLIC VAStatus
 __vaDriverInit_0_31(VADriverContextP ctx)
 {
@@ -58,8 +60,9 @@ __vaDriverInit_0_31(VADriverContextP ctx
       return VA_STATUS_ERROR_ALLOCATION_FAILED;
    }
 		
+   vTable = vlVaGetVtable();
    ctx->str_vendor = "mesa gallium vaapi";
-   ctx->vtable = vlVaGetVtable();
+   ctx->vtable = &vTable;
    ctx->max_attributes = 1;
    ctx->max_display_attributes = 1;
    ctx->max_entrypoints = VA_MAX_ENTRYPOINTS;
