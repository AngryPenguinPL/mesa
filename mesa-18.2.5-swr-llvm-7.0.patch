diff -up mesa-18.2.5/src/gallium/drivers/swr/rasterizer/jitter/gen_builder.hpp.omv~ mesa-18.2.5/src/gallium/drivers/swr/rasterizer/jitter/gen_builder.hpp
--- mesa-18.2.5/src/gallium/drivers/swr/rasterizer/jitter/gen_builder.hpp.omv~	2018-11-15 20:49:05.988585437 +0100
+++ mesa-18.2.5/src/gallium/drivers/swr/rasterizer/jitter/gen_builder.hpp	2018-11-15 20:52:48.003960988 +0100
@@ -58,22 +58,22 @@ CallInst* MEMSET(Value *Ptr, Value *Val,
 
 CallInst* MEMCOPY(Value *Dst, Value *Src, uint64_t Size, unsigned Align, bool isVolatile = false, MDNode *TBAATag = nullptr, MDNode *TBAAStructTag = nullptr, MDNode *ScopeTag = nullptr, MDNode *NoAliasTag = nullptr)
 {
-    return IRB()->CreateMemCpy(Dst, Src, Size, Align, isVolatile, TBAATag, TBAAStructTag, ScopeTag, NoAliasTag);
+    return IRB()->CreateMemCpy(Dst, Align, Src, Align, Size, isVolatile, TBAATag, TBAAStructTag, ScopeTag, NoAliasTag);
 }
 
 CallInst* MEMCOPY(Value *Dst, Value *Src, Value *Size, unsigned Align, bool isVolatile = false, MDNode *TBAATag = nullptr, MDNode *TBAAStructTag = nullptr, MDNode *ScopeTag = nullptr, MDNode *NoAliasTag = nullptr)
 {
-    return IRB()->CreateMemCpy(Dst, Src, Size, Align, isVolatile, TBAATag, TBAAStructTag, ScopeTag, NoAliasTag);
+    return IRB()->CreateMemCpy(Dst, Align, Src, Align, Size, isVolatile, TBAATag, TBAAStructTag, ScopeTag, NoAliasTag);
 }
 
 CallInst* MEMMOVE(Value *Dst, Value *Src, uint64_t Size, unsigned Align, bool isVolatile = false, MDNode *TBAATag = nullptr, MDNode *ScopeTag = nullptr, MDNode *NoAliasTag = nullptr)
 {
-    return IRB()->CreateMemMove(Dst, Src, Size, Align, isVolatile, TBAATag, ScopeTag, NoAliasTag);
+    return IRB()->CreateMemMove(Dst, Align, Src, Align, Size, isVolatile, TBAATag, ScopeTag, NoAliasTag);
 }
 
 CallInst* MEMMOVE(Value *Dst, Value *Src, Value *Size, unsigned Align, bool isVolatile = false, MDNode *TBAATag = nullptr, MDNode *ScopeTag = nullptr, MDNode *NoAliasTag = nullptr)
 {
-    return IRB()->CreateMemMove(Dst, Src, Size, Align, isVolatile, TBAATag, ScopeTag, NoAliasTag);
+    return IRB()->CreateMemMove(Dst, Align, Src, Align, Size, isVolatile, TBAATag, ScopeTag, NoAliasTag);
 }
 
 CallInst* FADD_REDUCE(Value *Acc, Value *Src)
@@ -978,7 +978,7 @@ Value* PTR_DIFF(Value *LHS, Value *RHS,
 
 Value* INVARIANT_GROUP_BARRIER(Value *Ptr)
 {
-    return IRB()->CreateInvariantGroupBarrier(Ptr);
+    return IRB()->CreateLaunderInvariantGroup(Ptr);
 }
 
 Value* VECTOR_SPLAT(unsigned NumElts, Value *V, const Twine &Name = "")
